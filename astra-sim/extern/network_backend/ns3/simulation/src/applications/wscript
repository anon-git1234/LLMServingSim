## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

import fnmatch 
import glob
import os

def build(bld):
    module = bld.create_ns3_module('applications', ['internet', 'config-store', 'tools', 'point-to-point'])
    module.source = [
        'model/bulk-send-application.cc',
	'model/onoff-application.cc',
        'model/packet-sink.cc',
        'model/ping6.cc',
        'model/radvd.cc',
        'model/radvd-interface.cc',
        'model/radvd-prefix.cc',
        'model/udp-client.cc',
        'model/udp-server.cc',
        #'model/seq-ts-header.cc',
        'model/udp-trace-client.cc',
        'model/packet-loss-counter.cc',
        'model/udp-echo-client.cc',
        'model/udp-echo-server.cc',
        'model/v4ping.cc',
        'helper/bulk-send-helper.cc',
        'helper/on-off-helper.cc',
        'helper/packet-sink-helper.cc',
        'helper/ping6-helper.cc',
        'helper/udp-client-server-helper.cc',
        'helper/udp-echo-helper.cc',
        'helper/v4ping-helper.cc',
		'model/rdma-client.cc',
		'helper/rdma-client-helper.cc',
        ]
    
    for dirpath, dirs, files in os.walk('./src/applications/astra-sim/'):
        if 'network_frontend' in dirpath:
            print(dirpath, files)
            continue
        for filename in fnmatch.filter(files, "*.cc"):
            file = os.path.join(dirpath, filename)
            file = file.replace("./src/applications/", "")
            module.source.append(file)

    # These directories have been included starting in ASTRA-sim 2.0 and are not necessary in ASTRA_sim 1.0
    # We do not want two versions of the ns3 repository (one for 1.0 and one for 2.0), hence, the below code is 
    # kept for both ASTRA-sim versions. 
    if os.getenv('IS_ASTRA_SIM_1_0') is None:
        for dirpath, dirs, files in os.walk('./src/applications/et_def/'):
            for filename in fnmatch.filter(files, '*.cc'):
                file = os.path.join(dirpath, filename)
                file = file.replace("./src/applications/", "")
                module.source.append(file)
        for dirpath, dirs, files in os.walk('./src/applications/et_feeder/'):
            for filename in fnmatch.filter(files, '*.cpp'):
                file = os.path.join(dirpath, filename)
                file = file.replace("./src/applications/", "")
                module.source.append(file)
        for dirpath, dirs, files in os.walk('./src/applications/third_party/utils'):
            for filename in fnmatch.filter(files, '*.cc'):
                file = os.path.join(dirpath, filename)
                file = file.replace("./src/applications/", "")
                module.source.append(file)
        for dirpath, dirs, files in os.walk('./src/applications/remote_memory_backend/analytical'):
            for filename in fnmatch.filter(files, '*.cc'):
                file = os.path.join(dirpath, filename)
                file = file.replace("./src/applications/", "")
                module.source.append(file)

    applications_test = bld.create_ns3_module_test_library('applications')
    applications_test.source = [
        'test/udp-client-server-test.cc',
        ]

    headers = bld(features='ns3header')
    headers.module = 'applications'
    headers.source = [
        'model/bulk-send-application.h',
	'model/onoff-application.h',
        'model/packet-sink.h',
        'model/ping6.h',
        'model/radvd.h',
        'model/radvd-interface.h',
        'model/radvd-prefix.h',
        'model/udp-client.h',
        'model/udp-server.h',
        #'model/seq-ts-header.h',
        'model/udp-trace-client.h',
        'model/packet-loss-counter.h',
        'model/udp-echo-client.h',
        'model/udp-echo-server.h',
        'model/v4ping.h',
        'helper/bulk-send-helper.h',
        'helper/on-off-helper.h',
        'helper/packet-sink-helper.h',
        'helper/ping6-helper.h',
        'helper/udp-client-server-helper.h',
        'helper/udp-echo-helper.h',
        'helper/v4ping-helper.h',
		'model/rdma-client.h',
		'helper/rdma-client-helper.h',
        ]

    for dirpath, dirs, files in os.walk('./src/applications/astra-sim/'):
        if 'network_frontend' in dirpath:
            print(dirpath, files)
            continue
        for filename in fnmatch.filter(files, '*.hh'):
            file = os.path.join(dirpath, filename)
            file = file.replace("./src/applications/", "")
            headers.source.append(file)

    bld.ns3_python_bindings()
